image: maven:3.8.6-openjdk-11

stages:
  - Compile
  - Build
  - Tests
  - Deploy

# The cache is updated after each step and serves the
# purpose o data-sharing between steps.
# For example, the step javadoc-release uses the artifacts generated in
# the step maven_compile, in order to release them.
cache:
  paths:
    - '.m2'
    - '*/target'
    - 'target'

# Environment variables
variables:
  MAVEN_M2: "-Dmaven.repo.local=.m2" # Instruct maven to use the m2 folder as local repository
  MAVEN_OPTIONS: "--batch-mode -s ../ci_settings.xml" # Suppress verbose output from the terminal. Provide settings file.
  PROJECT_DIR: "digitalenergyhub"
  MVN_CMD: "cd ${PROJECT_DIR} && mvn ${MAVEN_M2} ${MAVEN_OPTIONS}" # This is the Maven cmd to be used for every job.

maven_compile:
  stage: Compile
  script:
    - 'echo $MVN_CMD'
    - '$MVN_CMD clean compile'
  except:
    - /^release/.*$/  # Match release/ branches
    - tags

maven_install:
  stage: Build
  script:
    - '$MVN_CMD clean install -DskipTests'

unit_tests:
  stage: Tests
  script:
    # Reference:
    # -am will make all the other sub-modules.
    # -DfailIfNoTests=false does not fail the entire process since we are not intending to run tests in other modules.
    # -Dtest=**/unit/** matches all test classes located within folders named unit.
    - '$MVN_CMD test -Dsurefire.failIfNoSpecifiedTests=false -Dtest=**/unit/** -am'

integration_tests:
  stage: Tests
  script:
    # Reference:
    # -am will make all the other sub-modules.
    # -DfailIfNoTests=false does not fail the entire process since we are not intending to run tests in other modules.
    # -Dtest=**/integration/** matches all test classes located within folders named integration.
    - '$MVN_CMD test -Dsurefire.failIfNoSpecifiedTests=false -Dtest=**/integration/** -am'

deploy_to_gitlab:
  stage: Deploy
  script: # gitlab-maven refers to a specific server in the settings.xml
    - '$MVN_CMD deploy -DskipTests'
  only: # for branch name(s)
    - main